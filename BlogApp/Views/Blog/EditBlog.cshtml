@model EntityLayer.Concrete.Blog

@{
    ViewBag.Title = "Edit Blog";
    Layout = "~/Views/Shared/_AuthorLayout.cshtml";
}

<h2>Edit Blog</h2>


@using (Html.BeginForm("EditBlog", "Blog", FormMethod.Post))
{
    <div class="col-md-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Blog DÃ¼zenleme</h3>
            </div>
            <div class="card-body">
                
                <div class="form-group">
                    <label class="form-label">Blog ID: </label>
                    @Html.Label(@Model.BlogID.ToString())
                </div>
                
                <div class="form-group">
                    <label class="form-label">Blog Title</label>
                    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control", @type = "text", @name = "blogtitle", @placeholder = "Title.." })
                    @Html.ValidationMessageFor(x => x.BlogTitle)

                </div>

                <div class="form-group">
                    <label class="form-label">Blog Image</label>
                    @Html.TextBoxFor(x => x.BlogImage, new { @class = "form-control", @type = "text", @name = "blogimage", @placeholder = "Blog Image URL.." })
                    @Html.ValidationMessageFor(x => x.BlogImage)

                </div>

                <div class="form-group">
                    <label class="form-label">Blog Thumbnail Image</label>
                    @Html.TextBoxFor(x => x.BlogThumbnailImage, new { @class = "form-control", @type = "text", @name = "blogthumbnailimage", @placeholder = "Blog Thumbnail Image URL.." })
                    @Html.ValidationMessageFor(x => x.BlogThumbnailImage)

                </div>

                <div class="form-group">
                    <label class="form-label">Blog Category</label>
                    @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.cv, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.CategoryID)

                </div>

                <div class="form-group">
                    <label class="form-label">Blog Content</label>
                    @Html.TextAreaFor(x => x.BlogContent, new { @class = "form-control", @name = "BlogContent", @placeholder = "Blog Content", @rows = "6" })
                    @Html.ValidationMessageFor(x => x.BlogContent)

                </div>
                
                <div class="form-group">
                    @Html.HiddenFor(x=>x.BlogID, new{@class="form-control"})
                    @Html.HiddenFor(x=>x.BlogStatus, new{@class="form-control"})
                    @Html.HiddenFor(x=>x.AuthorID, new{@class="form-control"})
                    @Html.HiddenFor(x=>x.BlogCreateDate, new{@class="form-control"})
                </div>

            </div>
            <div class="card-footer">
                <div class="form-group">
                    <button class="btn text-white bg-green">Update</button>
                </div>

            </div>
        </div>
    </div>
}



